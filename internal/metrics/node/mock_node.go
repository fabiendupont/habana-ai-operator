// Code generated by MockGen. DO NOT EDIT.
// Source: node.go

// Package node is a generated GoMock package.
package node

import (
	context "context"
	reflect "reflect"

	v1alpha1 "github.com/HabanaAI/habana-ai-operator/api/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/apps/v1"
	v10 "k8s.io/api/core/v1"
)

// MockReconciler is a mock of Reconciler interface.
type MockReconciler struct {
	ctrl     *gomock.Controller
	recorder *MockReconcilerMockRecorder
}

// MockReconcilerMockRecorder is the mock recorder for MockReconciler.
type MockReconcilerMockRecorder struct {
	mock *MockReconciler
}

// NewMockReconciler creates a new mock instance.
func NewMockReconciler(ctrl *gomock.Controller) *MockReconciler {
	mock := &MockReconciler{ctrl: ctrl}
	mock.recorder = &MockReconcilerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReconciler) EXPECT() *MockReconcilerMockRecorder {
	return m.recorder
}

// DeleteNodeMetricsDaemonSet mocks base method.
func (m *MockReconciler) DeleteNodeMetricsDaemonSet(ctx context.Context, dc *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNodeMetricsDaemonSet", ctx, dc)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNodeMetricsDaemonSet indicates an expected call of DeleteNodeMetricsDaemonSet.
func (mr *MockReconcilerMockRecorder) DeleteNodeMetricsDaemonSet(ctx, dc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNodeMetricsDaemonSet", reflect.TypeOf((*MockReconciler)(nil).DeleteNodeMetricsDaemonSet), ctx, dc)
}

// DeleteNodeMetricsService mocks base method.
func (m *MockReconciler) DeleteNodeMetricsService(ctx context.Context, dc *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNodeMetricsService", ctx, dc)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNodeMetricsService indicates an expected call of DeleteNodeMetricsService.
func (mr *MockReconcilerMockRecorder) DeleteNodeMetricsService(ctx, dc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNodeMetricsService", reflect.TypeOf((*MockReconciler)(nil).DeleteNodeMetricsService), ctx, dc)
}

// ReconcileNodeMetricsDaemonSet mocks base method.
func (m *MockReconciler) ReconcileNodeMetricsDaemonSet(ctx context.Context, dc *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileNodeMetricsDaemonSet", ctx, dc)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileNodeMetricsDaemonSet indicates an expected call of ReconcileNodeMetricsDaemonSet.
func (mr *MockReconcilerMockRecorder) ReconcileNodeMetricsDaemonSet(ctx, dc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileNodeMetricsDaemonSet", reflect.TypeOf((*MockReconciler)(nil).ReconcileNodeMetricsDaemonSet), ctx, dc)
}

// ReconcileNodeMetricsService mocks base method.
func (m *MockReconciler) ReconcileNodeMetricsService(ctx context.Context, dc *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileNodeMetricsService", ctx, dc)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileNodeMetricsService indicates an expected call of ReconcileNodeMetricsService.
func (mr *MockReconcilerMockRecorder) ReconcileNodeMetricsService(ctx, dc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileNodeMetricsService", reflect.TypeOf((*MockReconciler)(nil).ReconcileNodeMetricsService), ctx, dc)
}

// SetDesiredNodeMetricsDaemonSet mocks base method.
func (m *MockReconciler) SetDesiredNodeMetricsDaemonSet(ds *v1.DaemonSet, cr *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetDesiredNodeMetricsDaemonSet", ds, cr)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetDesiredNodeMetricsDaemonSet indicates an expected call of SetDesiredNodeMetricsDaemonSet.
func (mr *MockReconcilerMockRecorder) SetDesiredNodeMetricsDaemonSet(ds, cr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDesiredNodeMetricsDaemonSet", reflect.TypeOf((*MockReconciler)(nil).SetDesiredNodeMetricsDaemonSet), ds, cr)
}

// SetDesiredNodeMetricsService mocks base method.
func (m *MockReconciler) SetDesiredNodeMetricsService(s *v10.Service, cr *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetDesiredNodeMetricsService", s, cr)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetDesiredNodeMetricsService indicates an expected call of SetDesiredNodeMetricsService.
func (mr *MockReconcilerMockRecorder) SetDesiredNodeMetricsService(s, cr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDesiredNodeMetricsService", reflect.TypeOf((*MockReconciler)(nil).SetDesiredNodeMetricsService), s, cr)
}
