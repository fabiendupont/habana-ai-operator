---
name: Build and push operator, bundle and catalog images

on:
  repository_dispatch:
    types:
      - operand-image-update
  push:
    branches:
      - main
    tags:
      - '*'

env:
  GOLANG_VERSION: '1.18'
  PYTHON_VERSION: '3.10'
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  get-operator-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Identify version based on branch
        id: get-version
        run: |
          if [ ${{ github.ref_name }} == "main" ]; then
              version="99.0.0"
          else
              version="${{ github.ref_name }}"
          fi
          echo "::set-output name=version::${version}"

  build-images:
    needs: get-operator-version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.get-operator-version.outputs.version }}
    steps:
      - name: Checkout current repository for the Dockerfiles
        uses: actions/checkout@v3

      - name: Setup Go ${{ env.GOLANG_VERSION }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ env.VERSION }}
        id: build-push-operator
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ env.VERSION }}"

      - name: Install the Operator SDK CLI
        run: |
          export OPERATOR_SDK_VERSION=$(cat config/hack/OPERATOR_SDK_VERSION)
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
          export OS=$(uname | awk '{print tolower($0)}')
          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_SDK_VERSION}
          curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}
          mkdir -p ${HOME}/.local/bin
          chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} ${HOME}/.local/bin/operator-sdk
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install python version ${{ env.PYTHON_VERSION }}
        uses: gabrielfalcao/pyenv-action@v10
        with:
          default: "${{ env.PYTHON_VERSION }}"
          command: pip install -U pip # upgrade pip after installing python

      - name: Generate the bundle content
        run: make bundle
        env:
          IMG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-push-operator.outputs.digest }}
          CONFIG_CONTAINER_IMAGES: config/hack/CONTAINER_IMAGES
          VAULT_HABANA_AI_USERNAME: ""
          VAULT_HABANA_AI_PASSWORD: ""
          GHCR_IO_USERNAME: ""
          GHCR_IO_PASSWORD: ""

      - name: Build and push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-bundle:v${{ env.VERSION }}
        id: build-push-operator-bundle
        uses: docker/build-push-action@v3
        with:
          context: .
          file: bundle.Dockerfile
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-bundle:v${{ env.VERSION }}"

      - name: Build and push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-catalog:v${{ env.VERSION }}
        run: make catalog-build && make catalog-push
        env:
          BUNDLE_IMG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-bundle@${{ steps.build-push-operator-bundle.outputs.digest }}
